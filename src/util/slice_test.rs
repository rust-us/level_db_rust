
mod test {
    use crate::util::slice::Slice;

    #[test]
    fn test_size() {
        let slice: Slice = String::from("123").into();
        assert_eq!(3, slice.size());
    }

    #[test]
    fn test_memory_leak() {
        // 申请 100G 内存, 查看是否内存泄漏。如果内存泄漏，程序会OOM
        (0..100_000_000).for_each(|_| {
            unsafe {
                // 1k
                let str = "0123012301230123012301230123012301230123012301230123012301230123012\
                301230123012301230123012301230123012301230123012301230123012301230123012301230123012\
                301230123012301230123012301230123012301230123012301230123012301230123012301230123012\
                301230123012301230123012301230123012301230123012301230123012301230123012301230123012\
                301230123012301230123012301230123012301230123012301230123012301230123012301230123012\
                301230123012301230123012301230123012301230123012301230123012301230123012301230123012\
                301230123012301230123012301230123012301230123012301230123012301230123012301230123012\
                301230123012301230123012301230123012301230123012301230123012301230123012301230123012\
                301230123012301230123012301230123012301230123012301230123012301230123012301230123012\
                301230123012301230123012301230123012301230123012301230123012301230123012301230123012\
                301230123012301230123012301230123012301230123012301230123012301230123012301230123012\
                301230123012301230123012301230123012301230123012301230123012301230123012301230123012\
                301230123012301230123012301230123";
                let _: Slice = str.into();
            }
        })
    }

}